<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="d21547d8-2ba5-4d89-a3c6-1c3e130a3b26" name="MURATGUMUS@MIKADEV-01 2014-12-24 13:49:00" runUser="MIKANETWORK\MURATGUMUS" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="0427665a-af2f-4f7a-aeed-814af422a447">
    <Description>These are default test settings for a local test run.</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="MURATGUMUS_MIKADEV-01 2014-12-24 13_49_00" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2014-12-24T13:49:00.1908676+02:00" queuing="2014-12-24T13:49:00.3627508+02:00" start="2014-12-24T13:49:00.4252565+02:00" finish="2014-12-24T13:54:40.6328862+02:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\muratgumus\documents\visual studio 2013\projects\testproject\webloadtest\webtest1.webtest" id="88703a86-b294-4da9-ba94-b27ecf2d3165" persistedWebTest="">
      <Execution id="08f19e50-1a0b-48a0-84ae-5c7e68b6cdd4" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="88703a86-b294-4da9-ba94-b27ecf2d3165" executionId="08f19e50-1a0b-48a0-84ae-5c7e68b6cdd4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="08f19e50-1a0b-48a0-84ae-5c7e68b6cdd4" testId="88703a86-b294-4da9-ba94-b27ecf2d3165" testName="WebTest1" computerName="MIKADEV-01" duration="00:05:39.1450778" startTime="2014-12-24T13:49:00.4877589+02:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08f19e50-1a0b-48a0-84ae-5c7e68b6cdd4">
      <Output>
        <ErrorInfo>
          <Message>The test adapter 'WebTestAdapter' threw an exception while running test 'WebTest1'. İş parçacığı durduruluyordu.</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="0427665a-af2f-4f7a-aeed-814af422a447">
        <Description>These are default test settings for a local test run.</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="MURATGUMUS_MIKADEV-01 2014-12-24 13_49_00" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>MURATGUMUS_MIKADEV-01 2014-12-24 13_49_00\In\08f19e50-1a0b-48a0-84ae-5c7e68b6cdd4\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>